// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type String struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *String) Reset()         { *m = String{} }
func (m *String) String() string { return proto.CompactTextString(m) }
func (*String) ProtoMessage()    {}
func (*String) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *String) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_String.Unmarshal(m, b)
}
func (m *String) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_String.Marshal(b, m, deterministic)
}
func (m *String) XXX_Merge(src proto.Message) {
	xxx_messageInfo_String.Merge(m, src)
}
func (m *String) XXX_Size() int {
	return xxx_messageInfo_String.Size(m)
}
func (m *String) XXX_DiscardUnknown() {
	xxx_messageInfo_String.DiscardUnknown(m)
}

var xxx_messageInfo_String proto.InternalMessageInfo

func (m *String) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Event struct {
	VismaActivityId      string         `protobuf:"bytes,1,opt,name=vismaActivityId,proto3" json:"vismaActivityId,omitempty"`
	ActivityTitle        string         `protobuf:"bytes,2,opt,name=activityTitle,proto3" json:"activityTitle,omitempty"`
	To                   string         `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	From                 string         `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	Location             string         `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	Room                 string         `protobuf:"bytes,6,opt,name=room,proto3" json:"room,omitempty"`
	Participants         []*Participant `protobuf:"bytes,7,rep,name=participants,proto3" json:"participants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetVismaActivityId() string {
	if m != nil {
		return m.VismaActivityId
	}
	return ""
}

func (m *Event) GetActivityTitle() string {
	if m != nil {
		return m.ActivityTitle
	}
	return ""
}

func (m *Event) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Event) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Event) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Event) GetRoom() string {
	if m != nil {
		return m.Room
	}
	return ""
}

func (m *Event) GetParticipants() []*Participant {
	if m != nil {
		return m.Participants
	}
	return nil
}

type Participant struct {
	GivenName            string   `protobuf:"bytes,1,opt,name=givenName,proto3" json:"givenName,omitempty"`
	Surname              string   `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	VismaId              string   `protobuf:"bytes,3,opt,name=vismaId,proto3" json:"vismaId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Participant) Reset()         { *m = Participant{} }
func (m *Participant) String() string { return proto.CompactTextString(m) }
func (*Participant) ProtoMessage()    {}
func (*Participant) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *Participant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Participant.Unmarshal(m, b)
}
func (m *Participant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Participant.Marshal(b, m, deterministic)
}
func (m *Participant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Participant.Merge(m, src)
}
func (m *Participant) XXX_Size() int {
	return xxx_messageInfo_Participant.Size(m)
}
func (m *Participant) XXX_DiscardUnknown() {
	xxx_messageInfo_Participant.DiscardUnknown(m)
}

var xxx_messageInfo_Participant proto.InternalMessageInfo

func (m *Participant) GetGivenName() string {
	if m != nil {
		return m.GivenName
	}
	return ""
}

func (m *Participant) GetSurname() string {
	if m != nil {
		return m.Surname
	}
	return ""
}

func (m *Participant) GetVismaId() string {
	if m != nil {
		return m.VismaId
	}
	return ""
}

type Generic struct {
	Path                 string            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	MsgID                string            `protobuf:"bytes,2,opt,name=msgID,proto3" json:"msgID,omitempty"`
	Headers              map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	Status               int32             `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Generic) Reset()         { *m = Generic{} }
func (m *Generic) String() string { return proto.CompactTextString(m) }
func (*Generic) ProtoMessage()    {}
func (*Generic) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *Generic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Generic.Unmarshal(m, b)
}
func (m *Generic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Generic.Marshal(b, m, deterministic)
}
func (m *Generic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Generic.Merge(m, src)
}
func (m *Generic) XXX_Size() int {
	return xxx_messageInfo_Generic.Size(m)
}
func (m *Generic) XXX_DiscardUnknown() {
	xxx_messageInfo_Generic.DiscardUnknown(m)
}

var xxx_messageInfo_Generic proto.InternalMessageInfo

func (m *Generic) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Generic) GetMsgID() string {
	if m != nil {
		return m.MsgID
	}
	return ""
}

func (m *Generic) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Generic) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Generic) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*String)(nil), "rpc.String")
	proto.RegisterType((*Event)(nil), "rpc.Event")
	proto.RegisterType((*Participant)(nil), "rpc.Participant")
	proto.RegisterType((*Generic)(nil), "rpc.Generic")
	proto.RegisterMapType((map[string]string)(nil), "rpc.Generic.HeadersEntry")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xb1, 0xdd, 0x24, 0xed, 0xd8, 0x21, 0xd5, 0x0a, 0xa1, 0x25, 0x42, 0xa8, 0xb2, 0x38,
	0x84, 0x4a, 0x58, 0xa8, 0xe1, 0x80, 0x7a, 0x43, 0x6a, 0x4b, 0x73, 0x41, 0x91, 0x29, 0x67, 0xb4,
	0xb1, 0x87, 0x64, 0x85, 0xbd, 0x6b, 0x76, 0xd7, 0x96, 0xfc, 0x38, 0xbc, 0x11, 0xaf, 0xc0, 0x9b,
	0x20, 0xaf, 0x6d, 0xe2, 0x50, 0x09, 0x7a, 0x9b, 0x7f, 0xfe, 0xcf, 0xa3, 0x99, 0xf1, 0x2c, 0x4c,
	0x35, 0xaa, 0x8a, 0x27, 0x18, 0x15, 0x4a, 0x1a, 0x49, 0x3c, 0x55, 0x24, 0xe1, 0x0b, 0x18, 0x7f,
	0x32, 0x8a, 0x8b, 0x2d, 0x79, 0x02, 0xa3, 0x8a, 0x65, 0x25, 0x52, 0xe7, 0xcc, 0x59, 0x9c, 0xc4,
	0xad, 0x08, 0x7f, 0x39, 0x30, 0xba, 0xae, 0x50, 0x18, 0xb2, 0x80, 0x59, 0xc5, 0x75, 0xce, 0xde,
	0x27, 0x86, 0x57, 0xdc, 0xd4, 0xab, 0xb4, 0x23, 0xff, 0x4e, 0x93, 0x97, 0x30, 0x65, 0x9d, 0xba,
	0xe3, 0x26, 0x43, 0xea, 0x5a, 0xee, 0x30, 0x49, 0x1e, 0x83, 0x6b, 0x24, 0xf5, 0xac, 0xe5, 0x1a,
	0x49, 0x08, 0x1c, 0x7d, 0x55, 0x32, 0xa7, 0x47, 0x36, 0x63, 0x63, 0x32, 0x87, 0xe3, 0x4c, 0x26,
	0xcc, 0x70, 0x29, 0xe8, 0xc8, 0xe6, 0xff, 0xe8, 0x86, 0x57, 0x52, 0xe6, 0x74, 0xdc, 0xf2, 0x4d,
	0x4c, 0xde, 0x42, 0x50, 0x30, 0x65, 0x78, 0xc2, 0x0b, 0x26, 0x8c, 0xa6, 0x93, 0x33, 0x6f, 0xe1,
	0x5f, 0x9c, 0x46, 0xaa, 0x48, 0xa2, 0xf5, 0xde, 0x88, 0x0f, 0xa8, 0xf0, 0x0b, 0xf8, 0x03, 0x93,
	0x3c, 0x87, 0x93, 0x2d, 0xaf, 0x50, 0x7c, 0x64, 0x79, 0xbf, 0x8c, 0x7d, 0x82, 0x50, 0x98, 0xe8,
	0x52, 0x89, 0xc6, 0x6b, 0xc7, 0xea, 0x65, 0xe3, 0xd8, 0x4d, 0xac, 0xd2, 0x6e, 0xaa, 0x5e, 0x86,
	0x3f, 0x1d, 0x98, 0x7c, 0x40, 0x81, 0x8a, 0x27, 0x4d, 0xdb, 0x05, 0x33, 0xbb, 0xae, 0xb0, 0x8d,
	0x9b, 0xd5, 0xe7, 0x7a, 0xbb, 0xba, 0xea, 0x2a, 0xb6, 0x82, 0x2c, 0x61, 0xb2, 0x43, 0x96, 0xa2,
	0xd2, 0xd4, 0xb3, 0x73, 0x3c, 0xb3, 0x73, 0x74, 0x85, 0xa2, 0xdb, 0xd6, 0xbb, 0x16, 0x46, 0xd5,
	0x71, 0x4f, 0x36, 0xe5, 0x37, 0x32, 0xad, 0xed, 0x16, 0x83, 0xd8, 0xc6, 0xe4, 0x29, 0x8c, 0xb5,
	0x61, 0xa6, 0xd4, 0x76, 0x87, 0xa3, 0xb8, 0x53, 0xf3, 0x4b, 0x08, 0x86, 0x45, 0xc8, 0x29, 0x78,
	0xdf, 0xb0, 0xee, 0x3a, 0x6b, 0xc2, 0xfd, 0x4d, 0xb8, 0x83, 0x9b, 0xb8, 0x74, 0xdf, 0x39, 0x17,
	0x3f, 0x5c, 0x38, 0xbe, 0xe3, 0xc5, 0x4d, 0x56, 0x57, 0x92, 0x9c, 0x43, 0xb0, 0x2e, 0x37, 0x19,
	0xd7, 0xbb, 0xf6, 0x54, 0xc0, 0x36, 0x6a, 0xe3, 0x79, 0x30, 0x6c, 0x3a, 0x7c, 0x44, 0x5e, 0x81,
	0xff, 0xb9, 0x48, 0x99, 0xc1, 0xff, 0xa3, 0xe7, 0xe0, 0x5f, 0x61, 0x86, 0x3d, 0xea, 0x5b, 0xbb,
	0xbd, 0xd6, 0x7b, 0x6c, 0x04, 0xb3, 0x18, 0x73, 0x59, 0xe1, 0x8d, 0x92, 0xf9, 0x03, 0xf8, 0xd7,
	0x30, 0xbd, 0x65, 0x22, 0xcd, 0xb0, 0xff, 0x2f, 0x07, 0xc0, 0x3d, 0x7c, 0x09, 0xb3, 0xb5, 0x92,
	0x09, 0x6a, 0x1d, 0xe3, 0xf7, 0x12, 0xb5, 0xd1, 0xff, 0xfe, 0x60, 0xe1, 0xbc, 0x71, 0x36, 0x63,
	0xfb, 0xce, 0x96, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x2c, 0x2c, 0x89, 0x39, 0x78, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TipFlyvoClient is the client API for TipFlyvo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TipFlyvoClient interface {
	PublishEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Generic, error)
	UpdateEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Generic, error)
	DeleteEvent(ctx context.Context, in *String, opts ...grpc.CallOption) (*Generic, error)
	RemoveFromEvent(ctx context.Context, in *String, opts ...grpc.CallOption) (*Generic, error)
	HandleGeneric(ctx context.Context, in *Generic, opts ...grpc.CallOption) (*Generic, error)
	ProcessRequests(ctx context.Context, opts ...grpc.CallOption) (TipFlyvo_ProcessRequestsClient, error)
}

type tipFlyvoClient struct {
	cc *grpc.ClientConn
}

func NewTipFlyvoClient(cc *grpc.ClientConn) TipFlyvoClient {
	return &tipFlyvoClient{cc}
}

func (c *tipFlyvoClient) PublishEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Generic, error) {
	out := new(Generic)
	err := c.cc.Invoke(ctx, "/rpc.TipFlyvo/PublishEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tipFlyvoClient) UpdateEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Generic, error) {
	out := new(Generic)
	err := c.cc.Invoke(ctx, "/rpc.TipFlyvo/UpdateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tipFlyvoClient) DeleteEvent(ctx context.Context, in *String, opts ...grpc.CallOption) (*Generic, error) {
	out := new(Generic)
	err := c.cc.Invoke(ctx, "/rpc.TipFlyvo/DeleteEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tipFlyvoClient) RemoveFromEvent(ctx context.Context, in *String, opts ...grpc.CallOption) (*Generic, error) {
	out := new(Generic)
	err := c.cc.Invoke(ctx, "/rpc.TipFlyvo/RemoveFromEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tipFlyvoClient) HandleGeneric(ctx context.Context, in *Generic, opts ...grpc.CallOption) (*Generic, error) {
	out := new(Generic)
	err := c.cc.Invoke(ctx, "/rpc.TipFlyvo/HandleGeneric", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tipFlyvoClient) ProcessRequests(ctx context.Context, opts ...grpc.CallOption) (TipFlyvo_ProcessRequestsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TipFlyvo_serviceDesc.Streams[0], "/rpc.TipFlyvo/ProcessRequests", opts...)
	if err != nil {
		return nil, err
	}
	x := &tipFlyvoProcessRequestsClient{stream}
	return x, nil
}

type TipFlyvo_ProcessRequestsClient interface {
	Send(*Generic) error
	Recv() (*Generic, error)
	grpc.ClientStream
}

type tipFlyvoProcessRequestsClient struct {
	grpc.ClientStream
}

func (x *tipFlyvoProcessRequestsClient) Send(m *Generic) error {
	return x.ClientStream.SendMsg(m)
}

func (x *tipFlyvoProcessRequestsClient) Recv() (*Generic, error) {
	m := new(Generic)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TipFlyvoServer is the server API for TipFlyvo service.
type TipFlyvoServer interface {
	PublishEvent(context.Context, *Event) (*Generic, error)
	UpdateEvent(context.Context, *Event) (*Generic, error)
	DeleteEvent(context.Context, *String) (*Generic, error)
	RemoveFromEvent(context.Context, *String) (*Generic, error)
	HandleGeneric(context.Context, *Generic) (*Generic, error)
	ProcessRequests(TipFlyvo_ProcessRequestsServer) error
}

// UnimplementedTipFlyvoServer can be embedded to have forward compatible implementations.
type UnimplementedTipFlyvoServer struct {
}

func (*UnimplementedTipFlyvoServer) PublishEvent(ctx context.Context, req *Event) (*Generic, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishEvent not implemented")
}
func (*UnimplementedTipFlyvoServer) UpdateEvent(ctx context.Context, req *Event) (*Generic, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEvent not implemented")
}
func (*UnimplementedTipFlyvoServer) DeleteEvent(ctx context.Context, req *String) (*Generic, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEvent not implemented")
}
func (*UnimplementedTipFlyvoServer) RemoveFromEvent(ctx context.Context, req *String) (*Generic, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFromEvent not implemented")
}
func (*UnimplementedTipFlyvoServer) HandleGeneric(ctx context.Context, req *Generic) (*Generic, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleGeneric not implemented")
}
func (*UnimplementedTipFlyvoServer) ProcessRequests(srv TipFlyvo_ProcessRequestsServer) error {
	return status.Errorf(codes.Unimplemented, "method ProcessRequests not implemented")
}

func RegisterTipFlyvoServer(s *grpc.Server, srv TipFlyvoServer) {
	s.RegisterService(&_TipFlyvo_serviceDesc, srv)
}

func _TipFlyvo_PublishEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TipFlyvoServer).PublishEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TipFlyvo/PublishEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TipFlyvoServer).PublishEvent(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _TipFlyvo_UpdateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TipFlyvoServer).UpdateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TipFlyvo/UpdateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TipFlyvoServer).UpdateEvent(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _TipFlyvo_DeleteEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TipFlyvoServer).DeleteEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TipFlyvo/DeleteEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TipFlyvoServer).DeleteEvent(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _TipFlyvo_RemoveFromEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TipFlyvoServer).RemoveFromEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TipFlyvo/RemoveFromEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TipFlyvoServer).RemoveFromEvent(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _TipFlyvo_HandleGeneric_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Generic)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TipFlyvoServer).HandleGeneric(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TipFlyvo/HandleGeneric",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TipFlyvoServer).HandleGeneric(ctx, req.(*Generic))
	}
	return interceptor(ctx, in, info, handler)
}

func _TipFlyvo_ProcessRequests_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TipFlyvoServer).ProcessRequests(&tipFlyvoProcessRequestsServer{stream})
}

type TipFlyvo_ProcessRequestsServer interface {
	Send(*Generic) error
	Recv() (*Generic, error)
	grpc.ServerStream
}

type tipFlyvoProcessRequestsServer struct {
	grpc.ServerStream
}

func (x *tipFlyvoProcessRequestsServer) Send(m *Generic) error {
	return x.ServerStream.SendMsg(m)
}

func (x *tipFlyvoProcessRequestsServer) Recv() (*Generic, error) {
	m := new(Generic)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _TipFlyvo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.TipFlyvo",
	HandlerType: (*TipFlyvoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PublishEvent",
			Handler:    _TipFlyvo_PublishEvent_Handler,
		},
		{
			MethodName: "UpdateEvent",
			Handler:    _TipFlyvo_UpdateEvent_Handler,
		},
		{
			MethodName: "DeleteEvent",
			Handler:    _TipFlyvo_DeleteEvent_Handler,
		},
		{
			MethodName: "RemoveFromEvent",
			Handler:    _TipFlyvo_RemoveFromEvent_Handler,
		},
		{
			MethodName: "HandleGeneric",
			Handler:    _TipFlyvo_HandleGeneric_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ProcessRequests",
			Handler:       _TipFlyvo_ProcessRequests_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "service.proto",
}
